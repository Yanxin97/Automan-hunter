<?xml version="1.0" encoding="UTF-8" standalone="no" ?>

<robot name="hunter_v1" 
    xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:arg name="robot_namespace" default="/" />

    <!-- Variables -->
    <xacro:property name="M_PI" value="3.14159"/>

    <!-- Vehicle Geometries -->
    <xacro:property name="wheelbase" value="0.64857" />
    <xacro:property name="track" value="0.56" />
    <xacro:property name="wheel_vertical_offset" value="-0.0165" />
    <xacro:property name="wheel_steering_offset" value="0.06" />

    <xacro:property name="wheel_length" value="1.1653e-01" />
    <xacro:property name="wheel_radius" value="1.6459e-01" />

    <!-- Base link -->
    <link name="base_link">
        <visual>
            <origin xyz="${wheelbase/2} 0 0" rpy="0 0 3.14" />
            <geometry>
                <mesh filename="file://$(find hunter_description)/meshes/base_link.dae" />
            </geometry>
        </visual>
        <collision>
            <origin xyz="0.30 0 0.05" rpy="0 0 0" />
            <geometry>
                <box size="0.8 0.38 0.26"/>
            </geometry>
        </collision>
        <!--collision>
            <origin xyz="-0.1 0 0.07" rpy="0 0 0" />
            <geometry>
                <box size="0.56 0.38 0.22"/>
            </geometry>
        </collision-->
    </link>

    <!-- sensors  -->
    <link name="rslidar">
        <visual>
            <origin xyz="0.0 0.0 0.0" />
            <geometry>
                <cylinder length="0.07" radius="0.05" />
            </geometry>
            <material name="orange" />
        </visual>
    </link>

    <joint name="rslidar_joint" type="fixed">
        <parent link="base_link" />
        <child link="rslidar" />
        <origin xyz="0.43 0.0 0.62" rpy="0 0 0" />
    </joint>

    <gazebo reference="rslidar">
        <sensor name="lidar" type="ray">
            <always_on>true</always_on>
            <visualize>true</visualize>
            <update_rate>5</update_rate>
            <ray>
            <scan>
                <horizontal>
                    <samples>360</samples>
                    <resolution>1.000000</resolution>
                    <min_angle>0.000000</min_angle>
                    <max_angle>6.280000</max_angle>
                </horizontal>
                <!--vertical>
                    <samples>32</samples>
                    <resolution>1.000000</resolution>
                    <min_angle>-0.53529248</min_angle>
                    <max_angle>0.18622663</max_angle>
                </vertical-->
            </scan>
            <range>
                <min>0.120000</min>
                <max>3.5</max>
                <resolution>0.015000</resolution>
            </range>
            <noise>
                <type>gaussian</type>
                <mean>0.0</mean>
                <stddev>0.01</stddev>
            </noise>
            </ray>
            <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
            <ros>
                <remapping>~/out:=scan</remapping>
            </ros>
            <output_type>sensor_msgs/LaserScan</output_type>
            <frame_name>rslidar</frame_name>
            </plugin>
        </sensor>
    </gazebo>    

    <link name="imu_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" />
            <geometry>
                <cylinder length="0.03" radius="0.02" />
            </geometry>
            <material name="red" />
        </visual>
    </link>

    <joint name="imu_joint" type="fixed">
        <parent link="base_link" />
        <child link="imu_link" />
        <origin xyz="0.32 0.0 0.18" rpy="0 0 0" />
    </joint>
    
    <gazebo reference="imu_link">
    <sensor name="imu_sensor" type="imu">
    <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <ros>
            <namespace>/demo</namespace>
            <remapping>~/out:=imu</remapping>
        </ros>
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
        </plugin>
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <visualize>true</visualize>
        <imu>
        <angular_velocity>
            <x>
            <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
            </noise>
            </x>
            <y>
            <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
            </noise>
            </y>
            <z>
            <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
            </noise>
            </z>
        </angular_velocity>
        <linear_acceleration>
            <x>
            <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
            </noise>
            </x>
            <y>
            <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
            </noise>
            </y>
            <z>
            <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
            </noise>
            </z>
        </linear_acceleration>
        </imu>
    </sensor>
    </gazebo>

    <link name="d435_front_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" />
            <geometry>
                <box size="0.03 0.1 0.03"/>
            </geometry>
            <material name="blue" />
        </visual>
    </link>

    <joint name="d435_front_joint" type="fixed">
        <parent link="base_link" />
        <child link="d435_front_link" />
        <origin xyz="0.62 0.0 0.25" rpy="0 0 0" />
    </joint>

    <link name="d435_front_depth_frame"/>

    <joint name="d435_front_depth_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
        <parent link="d435_front_link"/>
        <child link="d435_front_depth_frame"/>
    </joint>    

    <gazebo reference="d435_front_link">
    <sensor name="depth_camera" type="depth">
        <visualize>true</visualize>
        <update_rate>30.0</update_rate>
        <camera name="camera">
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
        </image>
        <clip>
            <near>0.05</near>
            <far>3</far>
        </clip>
        </camera>
        <plugin name="depth_camera_controller" filename="libgazebo_ros_camera.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <frame_name>d435_front_depth_frame</frame_name>
        <pointCloudCutoff>0.1</pointCloudCutoff>
        <pointCloudCutoffMax>5.0</pointCloudCutoffMax>
        <distortionK1>0</distortionK1>
        <distortionK2>0</distortionK2>
        <distortionK3>0</distortionK3>
        <distortionT1>0</distortionT1>
        <distortionT2>0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
        </plugin>
    </sensor>
    </gazebo>

    <link name="d435_rear_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" />
            <geometry>
                <box size="0.03 0.1 0.03"/>
            </geometry>
            <material name="blue" />
        </visual>
    </link>

    <joint name="d435_rear_joint" type="fixed">
        <parent link="base_link" />
        <child link="d435_rear_link" />
        <origin xyz="-0.07 0.0 0.2" rpy="0 0 3.14" />
    </joint>

    <link name="base_footprint"/>

    <joint name="base_footprint_joint" type="fixed">
        <origin xyz="0 0 ${wheel_vertical_offset - wheel_radius}" rpy="0 0 0" />
        <parent link="base_link" />
        <child link="base_footprint" />
    </joint>

    <link name="inertial_link">
        <inertial>
            <mass value="40" />
            <!-- <mass value="50" /> -->
            <!-- <origin xyz="-0.00065 -0.085 0.062" />
            <inertia ixx="0.6022" ixy="-0.02364" ixz="-0.1197" iyy="1.7386" iyz="-0.001544" izz="2.0296" /> -->
            <origin xyz="0.0 0.0 0.0" />
            <inertia ixx="2.288641" ixy="0" ixz="0" iyy="5.103976" iyz="0" izz="3.431465" />
        </inertial>
    </link>

    <joint name="inertial_joint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0" />
        <parent link="base_link" />
        <child link="inertial_link" />
    </joint>

    <!-- front right wheel -->
    <joint name="front_right_steering" type="revolute">
        <origin xyz="${wheelbase} ${track/2-wheel_steering_offset} ${wheel_vertical_offset}" rpy="0 0 0" />
        <parent link="base_link"/>
        <child link="front_right_steer_link"/>
        <axis xyz="0 0 1" rpy="0 0 0" />
        <limit lower="-0.785" upper="0.785" effort="20" velocity="0.8" />
    </joint>

    <link name="front_right_steer_link">
        <inertial>
            <mass value="3" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.7171" ixy="0" ixz="0" iyy="0.1361" iyz="0" izz="0.7171" />
        </inertial>
        <visual>
            <origin xyz="0 ${wheel_steering_offset} 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find hunter_description)/meshes/steer_conn_fr.dae" />
            </geometry>
        </visual>
    </link>

    <joint name="front_right_wheel" type="continuous">
        <origin xyz="0 ${wheel_steering_offset} 0" rpy="0 0 0" />
        <parent link="front_right_steer_link"/>
        <child link="front_right_wheel_link"/>
        <axis xyz="0 1 0" rpy="0 0 0" />
    </joint>

    <link name="front_right_wheel_link">
        <inertial>
            <mass value="3" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.7171" ixy="0" ixz="0" iyy="0.1361" iyz="0" izz="0.7171" />
        </inertial>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find hunter_description)/meshes/wheel_fr.dae" />
            </geometry>
        </visual>
        <!-- <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="package://hunter_description/meshes/hub_shape.stl" />
            </geometry>
        </visual> -->
        <collision>
            <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
            <geometry>
                <cylinder length="${wheel_length}" radius="${wheel_radius}" />
            </geometry>
        </collision>
    </link>

    <!-- front left wheel -->
    <joint name="front_left_steering" type="revolute">
        <origin xyz="${wheelbase} -${track/2-wheel_steering_offset} ${wheel_vertical_offset}" rpy="0 0 0" />
        <parent link="base_link"/>
        <child link="front_left_steer_link"/>
        <axis xyz="0 0 1" rpy="0 0 0" />
        <limit lower="-0.785" upper="0.785" effort="20" velocity="0.8" />
    </joint>

    <link name="front_left_steer_link">
        <inertial>
            <mass value="3" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.7171" ixy="0" ixz="0" iyy="0.1361" iyz="0" izz="0.7171" />
        </inertial>
        <visual>
            <origin xyz="0 -${wheel_steering_offset} 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find hunter_description)/meshes/steer_conn_fl.dae" />
            </geometry>
        </visual>
    </link>

    <joint name="front_left_wheel" type="continuous">
        <origin xyz="0 -${wheel_steering_offset} 0" rpy="0 0 0" />
        <parent link="front_left_steer_link"/>
        <child link="front_left_wheel_link"/>
        <axis xyz="0 1 0" rpy="0 0 0" />
    </joint>

    <link name="front_left_wheel_link">
        <inertial>
            <mass value="3" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.7171" ixy="0" ixz="0" iyy="0.1361" iyz="0" izz="0.7171" />
        </inertial>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find hunter_description)/meshes/wheel_fl.dae" />
            </geometry>
        </visual>
        <!-- <visual>
            <origin xyz="0 0 0" rpy="0 0 3.14" />
            <geometry>
                <mesh filename="package://hunter_description/meshes/hub_shape.stl" />
            </geometry>
        </visual> -->
        <collision>
            <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
            <geometry>
                <cylinder length="${wheel_length}" radius="${wheel_radius}" />
            </geometry>
        </collision>
    </link>

    <!--Virtual steering wheel-->
    <link name="steering_wheel_link">
        <inertial>
            <mass value="3" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.7171" ixy="0" ixz="0" iyy="0.1361" iyz="0" izz="0.7171" />
        </inertial>
    </link>

    <joint name="steering_wheel" type="revolute">
        <origin xyz="${wheelbase} 0 ${wheel_vertical_offset}" rpy="0 0 0" />
        <parent link="base_link"/>
        <child link="steering_wheel_link"/>
        <axis xyz="0 0 1" rpy="0 0 0" />
        <limit lower="-0.785" upper="0.785" effort="20" velocity="0.8" />
    </joint>

    <!-- rear left wheel -->
    <link name="rear_left_wheel_link">
        <inertial>
            <mass value="3" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.7171" ixy="0" ixz="0" iyy="0.1361" iyz="0" izz="0.7171" />
        </inertial>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find hunter_description)/meshes/wheel_rl.dae" />
            </geometry>
        </visual>
        <!-- <visual>
            <origin xyz="0 0 0" rpy="0 0 3.14" />
            <geometry>
                <mesh filename="package://hunter_description/meshes/hub_shape.stl" />
            </geometry>
        </visual> -->
        <collision>
            <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
            <geometry>
                <cylinder length="${wheel_length}" radius="${wheel_radius}" />
            </geometry>
        </collision>
    </link>

    <joint name="rear_left_wheel" type="continuous">
        <origin xyz="0 -${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
        <parent link="base_link"/>
        <child link="rear_left_wheel_link"/>
        <axis xyz="0 1 0" rpy="0 0 0" />
    </joint>

    <!-- rear right wheel -->
    <link name="rear_right_wheel_link">
        <inertial>
            <mass value="3" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.7171" ixy="0" ixz="0" iyy="0.1361" iyz="0" izz="0.7171" />
        </inertial>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find hunter_description)/meshes/wheel_rr.dae" />
            </geometry>
        </visual>
        <!-- <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="package://hunter_description/meshes/hub_shape.stl" />
            </geometry>
        </visual> -->
        <collision>
            <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
            <geometry>
                <cylinder length="${wheel_length}" radius="${wheel_radius}" />
            </geometry>
        </collision>
    </link>

    <joint name="rear_right_wheel" type="continuous">
        <origin xyz="0 ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
        <parent link="base_link"/>
        <child link="rear_right_wheel_link"/>
        <axis xyz="0 1 0" rpy="0 0 0" />
    </joint>

    <gazebo>
    <plugin name='ackermann_drive' filename='libgazebo_ros_ackermann_drive.so'>

        <ros>
          <namespace>demo</namespace>
        </ros>

        <update_rate>50.0</update_rate>

        <!-- wheels -->
        <front_left_joint>front_left_wheel</front_left_joint>
        <front_right_joint>front_right_wheel</front_right_joint>
        <rear_left_joint>rear_left_wheel</rear_left_joint>
        <rear_right_joint>rear_right_wheel</rear_right_joint>
        <left_steering_joint>front_left_steering</left_steering_joint>
        <right_steering_joint>front_right_steering</right_steering_joint>
        <steering_wheel_joint>steering_wheel</steering_wheel_joint>

        <!-- Max absolute steer angle for tyre in radians-->
        <!-- Any cmd_vel angular z greater than this would be capped -->
        <max_steer>1.0</max_steer>

        <!-- Max absolute steering angle of steering wheel -->
        <max_steering_angle>7.85</max_steering_angle>

        <!-- Max absolute linear speed in m/s -->
        <max_speed>1</max_speed>

        <!-- PID tuning -->
        <left_steering_pid_gain>30 0 1</left_steering_pid_gain>
        <left_steering_i_range>0 0</left_steering_i_range>
        <right_steering_pid_gain>30 0 1</right_steering_pid_gain>
        <right_steering_i_range>0 0</right_steering_i_range>
        <linear_velocity_pid_gain>50 0 1</linear_velocity_pid_gain>
        <linear_velocity_i_range>0 0</linear_velocity_i_range>

        <!-- output -->
        <publish_odom>true</publish_odom>
        <publish_odom_tf>true</publish_odom_tf>
        <publish_wheel_tf>true</publish_wheel_tf>
        <publish_distance>false</publish_distance>

        <odometry_frame>odom</odometry_frame>
        <robot_base_frame>base_link</robot_base_frame>

    </plugin>
    </gazebo>

</robot>
